{"ast":null,"code":"var _jsxFileName = \"/Users/thomasturek/Documents/GitHub/aquinas/aquinas/src/components/TweetList.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TweetList = ({\n  tweets\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Tweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: tweet.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"By: \", tweet.user.name, \" (@\", tweet.user.screen_name, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Suggested Reply: \", tweet.suggestedReply]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, tweet.id_str, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = TweetList;\nexport default TweetList;\nvar _c;\n$RefreshReg$(_c, \"TweetList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TweetList","tweets","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tweet","text","user","name","screen_name","suggestedReply","id_str","_c","$RefreshReg$"],"sources":["/Users/thomasturek/Documents/GitHub/aquinas/aquinas/src/components/TweetList.tsx"],"sourcesContent":["import React from 'react';\n\ninterface Tweet {\n  id_str: string;\n  text: string;\n  user: {\n    name: string;\n    screen_name: string;\n  };\n  suggestedReply: string;\n}\n\ninterface TweetListProps {\n  tweets: Tweet[];\n}\n\nconst TweetList: React.FC<TweetListProps> = ({ tweets }) => {\n  return (\n    <div>\n      <h2>Recent Tweets</h2>\n      {tweets.map((tweet) => (\n        <div key={tweet.id_str}>\n          <p>{tweet.text}</p>\n          <p>By: {tweet.user.name} (@{tweet.user.screen_name})</p>\n          <p>Suggested Reply: {tweet.suggestedReply}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TweetList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB1B,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAC1D,oBACEF,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBL,MAAM,CAACM,GAAG,CAAEC,KAAK,iBAChBT,OAAA;MAAAG,QAAA,gBACEH,OAAA;QAAAG,QAAA,EAAIM,KAAK,CAACC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBP,OAAA;QAAAG,QAAA,GAAG,MAAI,EAACM,KAAK,CAACE,IAAI,CAACC,IAAI,EAAC,KAAG,EAACH,KAAK,CAACE,IAAI,CAACE,WAAW,EAAC,GAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxDP,OAAA;QAAAG,QAAA,GAAG,mBAAiB,EAACM,KAAK,CAACK,cAAc;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHtCE,KAAK,CAACM,MAAM;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACS,EAAA,GAbIf,SAAmC;AAezC,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
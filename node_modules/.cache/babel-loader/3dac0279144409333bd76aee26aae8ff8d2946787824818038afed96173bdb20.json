{"ast":null,"code":"const API_URL = '/api';\nexport async function register(username, password) {\n  const response = await fetch(`${API_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  return handleResponse(response);\n}\nexport async function login(username, password) {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  return handleResponse(response);\n}\nasync function handleResponse(response) {\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.error || response.statusText);\n  }\n  return data;\n}","map":{"version":3,"names":["API_URL","register","username","password","response","fetch","method","headers","body","JSON","stringify","handleResponse","login","data","json","ok","Error","error","statusText"],"sources":["/Users/thomasturek/Documents/GitHub/aquinas/aquinas/src/services/authService.ts"],"sourcesContent":["const API_URL = '/api';\n\nexport async function register(username: string, password: string) {\n  const response = await fetch(`${API_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ username, password }),\n  });\n  return handleResponse(response);\n}\n\nexport async function login(username: string, password: string) {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ username, password }),\n  });\n  return handleResponse(response);\n}\n\nasync function handleResponse(response: Response) {\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.error || response.statusText);\n  }\n  return data;\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAG,MAAM;AAEtB,OAAO,eAAeC,QAAQA,CAACC,QAAgB,EAAEC,QAAgB,EAAE;EACjE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,WAAW,EAAE;IAClDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAS,CAAC;EAC7C,CAAC,CAAC;EACF,OAAOQ,cAAc,CAACP,QAAQ,CAAC;AACjC;AAEA,OAAO,eAAeQ,KAAKA,CAACV,QAAgB,EAAEC,QAAgB,EAAE;EAC9D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,QAAQ,EAAE;IAC/CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAS,CAAC;EAC7C,CAAC,CAAC;EACF,OAAOQ,cAAc,CAACP,QAAQ,CAAC;AACjC;AAEA,eAAeO,cAAcA,CAACP,QAAkB,EAAE;EAChD,MAAMS,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAIb,QAAQ,CAACc,UAAU,CAAC;EACpD;EACA,OAAOL,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}